-- This file is part of the yasmv distribution
-- (c) 2011-16 M. Pensallorto < marco DOT pensallorto AT gmail DOT com >
#word-width 6
MODULE maze

#hidden
#frozen
VAR
    space: boolean[64];

VAR
    x, y : uint;

#hidden
DEFINE _ := FALSE;

#hidden
DEFINE O := TRUE;

-- Define the labyrinth space. 'O's are obstacles, while '_' are free
-- cells. The labyrinth doesn't change overtime.
INVAR
   0 <= x && 0 <= y;

INVAR
  x < 8 && y < 8;

INVAR
    space = [_,_,O,O,_,O,O,O,
             O,_,O,O,_,_,_,_,
             O,_,O,_,_,O,O,_,
             O,_,O,_,_,_,O,_,
             _,_,_,O,O,_,O,O,
             _,_,_,_,O,_,O,_,
             _,O,O,_,_,_,O,_,
             _,_,_,_,O,O,O,_];

-- our guy starts at the top-left corner,
INIT
   x = 0 && y = 0;

-- he can not occupy a cell which holds an obstacle...

#hidden
DEFINE
  addr := y * 8 + x;

INVAR
  ! space [addr];

-- he can move one step at the time on the X axis...
INVAR
   x < next(x) -> next(x) - x = 1;
INVAR
   next(x) < x -> x - next(x) = 1;

-- ... or the Y axis,
INVAR
   y < next(y) -> next(y) - y = 1;
INVAR
   next(y) < y -> y - next(y) = 1;

-- ... but not both
INVAR
   (next(x) != x) && (next(y)  = y) ||
   (next(x)  = x) && (next(y) != y) ;

-- his target is the bottom-right corner
#hidden
DEFINE
  GOAL := x = 7 && y = 7;

-- to solve the labyrinth issue the command:
-- >> reach GOAL;
