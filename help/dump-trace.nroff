.nf
YASMV manual                                            dump-trace

.ti 0
SYNOPSIS

.in 3
[[ REQUIRES MODEL ]]
dump-trace [ -f <format> ] [ -o "<filename>" ] [ -a | <trace-uid>+ ]


.ti 0
DESCRIPTION

.fi
.in 3
Dumps witness traces.

-a, Dumps all available witnesses.

-f <format>, selects a format for trace printout. Format can be either `plain`, or  `json`. If no format is
specified, the `plain` format will be used for dumping.

-o "<filename>", filename must be a valid writable file path. Existing files will be overwritten.

`trace-uid` is the index of the trace to be dumped. Multiple `trace-uid`s can be required at once, in which case
the traces will be printed in the specified order. If omitted, currently selected trace will be dumped.


.ti 0
EXAMPLES

.nf
>> read-model 'examples/ferryman/ferryman.smv'
>> reach GOAL
-- Target is reachable, registered witness `reach_1`, 8 steps.
>> dump-trace -f json
{
  "witness": {
    "id": "reach_1",
    "description": "Reachability witness for target `GOAL` in module `ferryman`",
    "steps": [
      {
        "time": 0,
        "state": {
          "ferryman": "WEST",
          "goat": "WEST",
          "cabbage": "WEST",
          "wolf": "WEST",
          "carry": "NIL"
        }
      },
      {
        "time": 1,
        "state": {
          "ferryman": "EAST",
          "goat": "EAST",
          "cabbage": "WEST",
          "wolf": "WEST",
          "carry": "GOAT"
        }
      }
    ]
  }
}


.ti 0
Copyright (c) M. Pensallorto 2011-2018.

.fi
.in 3
This document is part of the YASMV distribution, and as such is covered by the
GPLv3 license that covers the whole project.
